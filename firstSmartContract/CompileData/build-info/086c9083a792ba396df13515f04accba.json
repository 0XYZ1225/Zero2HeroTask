{
	"id": "086c9083a792ba396df13515f04accba",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"Interface.sol": {
				"content": "/**\n *Submitted for verification at Etherscan.io on 2020-08-26\n*/\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: @openzeppelin/contracts/math/SafeMath.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/EnumerableSet.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n * (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint256(_at(set._inner, index)));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n\n// File: @openzeppelin/contracts/GSN/Context.sol\n\n\n\npragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n\n\n\n// File: contracts/MasterChef.sol\n\npragma solidity 0.6.12;\n\n\n\n\n\n\n\n\ninterface IMigratorChef {\n    // Perform LP token migration from legacy UniswapV2 to SushiSwap.\n    // Take the current LP token address and return the new LP token address.\n    // Migrator should have full access to the caller's LP token.\n    // Return the new LP token address.\n    //\n    // XXX Migrator must have allowance access to UniswapV2 LP tokens.\n    // SushiSwap must mint EXACTLY the same amount of SushiSwap LP tokens or\n    // else something bad will happen. Traditional UniswapV2 does not\n    // do that so be careful!\n    function migrate(IERC20 token) external returns (IERC20);\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Interface.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Interface.sol\":8160:14113  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Interface.sol\":8160:14113  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220eb5ef632a9db93f35be4c54748a29159c359557c9a094cecfb88a2bb3798d03564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb5ef632a9db93f35be4c54748a29159c359557c9a094cecfb88a2bb3798d03564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0x5E 0xF6 ORIGIN 0xA9 0xDB SWAP4 RETURN JUMPDEST 0xE4 0xC5 SELFBALANCE 0x48 LOG2 SWAP2 MSIZE 0xC3 MSIZE SSTORE PUSH29 0x9A094CECFB88A2BB3798D03564736F6C634300060C0033000000000000 ",
							"sourceMap": "8160:5953:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eb5ef632a9db93f35be4c54748a29159c359557c9a094cecfb88a2bb3798d03564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB 0x5E 0xF6 ORIGIN 0xA9 0xDB SWAP4 RETURN JUMPDEST 0xE4 0xC5 SELFBALANCE 0x48 LOG2 SWAP2 MSIZE 0xC3 MSIZE SSTORE PUSH29 0x9A094CECFB88A2BB3798D03564736F6C634300060C0033000000000000 ",
							"sourceMap": "8160:5953:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8160,
									"end": 14113,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8160,
									"end": 14113,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb5ef632a9db93f35be4c54748a29159c359557c9a094cecfb88a2bb3798d03564736f6c634300060c0033",
									".code": [
										{
											"begin": 8160,
											"end": 14113,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8160,
											"end": 14113,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8160,
											"end": 14113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8160,
											"end": 14113,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8160,
											"end": 14113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8160,
											"end": 14113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8160,
											"end": 14113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8160,
											"end": 14113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8160,
											"end": 14113,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface.sol\":{\"keccak256\":\"0xc5f9c5a6e0245aa5e041dda9f3886df9416d001e60789ae198d1e3698917f2fb\",\"urls\":[\"bzz-raw://af08b0a19101d26123c6bd464785d8e5320864b59c95068e63eac4d38bf7c556\",\"dweb:/ipfs/QmU2ddgdeVSa97yqnb7ok4AhfVmpnb9c3zmKZN7nkVoNs8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface.sol\":{\"keccak256\":\"0xc5f9c5a6e0245aa5e041dda9f3886df9416d001e60789ae198d1e3698917f2fb\",\"urls\":[\"bzz-raw://af08b0a19101d26123c6bd464785d8e5320864b59c95068e63eac4d38bf7c556\",\"dweb:/ipfs/QmU2ddgdeVSa97yqnb7ok4AhfVmpnb9c3zmKZN7nkVoNs8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Interface.sol\":30013:39459  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"Interface.sol\":30681:30822  constructor (string memory name, string memory symbol) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"Interface.sol\":30761:30765  name */\n  dup2\n    /* \"Interface.sol\":30753:30758  _name */\n  0x03\n    /* \"Interface.sol\":30753:30765  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"Interface.sol\":30785:30791  symbol */\n  dup1\n    /* \"Interface.sol\":30775:30782  _symbol */\n  0x04\n    /* \"Interface.sol\":30775:30791  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"Interface.sol\":30813:30815  18 */\n  0x12\n    /* \"Interface.sol\":30801:30810  _decimals */\n  0x05\n  0x00\n    /* \"Interface.sol\":30801:30815  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Interface.sol\":30681:30822  constructor (string memory name, string memory symbol) public {... */\n  pop\n  pop\n    /* \"Interface.sol\":30013:39459  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Interface.sol\":30013:39459  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Interface.sol\":30887:30968  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":32923:33089  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":31930:32028  function totalSupply() public view override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":33549:33866  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":31789:31870  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":34261:34476  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":32086:32203  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":31081:31166  function symbol() public view returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":34963:35229  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":32406:32578  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":32636:32785  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Interface.sol\":30887:30968  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"Interface.sol\":30924:30937  string memory */\n      0x60\n        /* \"Interface.sol\":30956:30961  _name */\n      0x03\n        /* \"Interface.sol\":30949:30961  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Interface.sol\":30887:30968  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Interface.sol\":32923:33089  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"Interface.sol\":33006:33010  bool */\n      0x00\n        /* \"Interface.sol\":33022:33061  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"Interface.sol\":33031:33043  _msgSender() */\n      tag_58\n        /* \"Interface.sol\":33031:33041  _msgSender */\n      tag_59\n        /* \"Interface.sol\":33031:33043  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"Interface.sol\":33045:33052  spender */\n      dup5\n        /* \"Interface.sol\":33054:33060  amount */\n      dup5\n        /* \"Interface.sol\":33022:33030  _approve */\n      tag_60\n        /* \"Interface.sol\":33022:33061  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"Interface.sol\":33078:33082  true */\n      0x01\n        /* \"Interface.sol\":33071:33082  return true */\n      swap1\n      pop\n        /* \"Interface.sol\":32923:33089  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Interface.sol\":31930:32028  function totalSupply() public view override returns (uint256) {... */\n    tag_25:\n        /* \"Interface.sol\":31983:31990  uint256 */\n      0x00\n        /* \"Interface.sol\":32009:32021  _totalSupply */\n      sload(0x02)\n        /* \"Interface.sol\":32002:32021  return _totalSupply */\n      swap1\n      pop\n        /* \"Interface.sol\":31930:32028  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Interface.sol\":33549:33866  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"Interface.sol\":33655:33659  bool */\n      0x00\n        /* \"Interface.sol\":33671:33707  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"Interface.sol\":33681:33687  sender */\n      dup5\n        /* \"Interface.sol\":33689:33698  recipient */\n      dup5\n        /* \"Interface.sol\":33700:33706  amount */\n      dup5\n        /* \"Interface.sol\":33671:33680  _transfer */\n      tag_64\n        /* \"Interface.sol\":33671:33707  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"Interface.sol\":33717:33838  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"Interface.sol\":33726:33732  sender */\n      dup5\n        /* \"Interface.sol\":33734:33746  _msgSender() */\n      tag_66\n        /* \"Interface.sol\":33734:33744  _msgSender */\n      tag_59\n        /* \"Interface.sol\":33734:33746  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"Interface.sol\":33748:33837  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"Interface.sol\":33786:33792  amount */\n      dup6\n        /* \"Interface.sol\":33748:33837  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"Interface.sol\":33748:33759  _allowances */\n      0x01\n        /* \"Interface.sol\":33748:33767  _allowances[sender] */\n      0x00\n        /* \"Interface.sol\":33760:33766  sender */\n      dup12\n        /* \"Interface.sol\":33748:33767  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Interface.sol\":33748:33781  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"Interface.sol\":33768:33780  _msgSender() */\n      tag_68\n        /* \"Interface.sol\":33768:33778  _msgSender */\n      tag_59\n        /* \"Interface.sol\":33768:33780  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"Interface.sol\":33748:33781  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Interface.sol\":33748:33785  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"Interface.sol\":33748:33837  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"Interface.sol\":33717:33725  _approve */\n      tag_60\n        /* \"Interface.sol\":33717:33838  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"Interface.sol\":33855:33859  true */\n      0x01\n        /* \"Interface.sol\":33848:33859  return true */\n      swap1\n      pop\n        /* \"Interface.sol\":33549:33866  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Interface.sol\":31789:31870  function decimals() public view returns (uint8) {... */\n    tag_30:\n        /* \"Interface.sol\":31830:31835  uint8 */\n      0x00\n        /* \"Interface.sol\":31854:31863  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Interface.sol\":31847:31863  return _decimals */\n      swap1\n      pop\n        /* \"Interface.sol\":31789:31870  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Interface.sol\":34261:34476  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"Interface.sol\":34349:34353  bool */\n      0x00\n        /* \"Interface.sol\":34365:34448  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"Interface.sol\":34374:34386  _msgSender() */\n      tag_73\n        /* \"Interface.sol\":34374:34384  _msgSender */\n      tag_59\n        /* \"Interface.sol\":34374:34386  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"Interface.sol\":34388:34395  spender */\n      dup5\n        /* \"Interface.sol\":34397:34447  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"Interface.sol\":34436:34446  addedValue */\n      dup6\n        /* \"Interface.sol\":34397:34408  _allowances */\n      0x01\n        /* \"Interface.sol\":34397:34422  _allowances[_msgSender()] */\n      0x00\n        /* \"Interface.sol\":34409:34421  _msgSender() */\n      tag_75\n        /* \"Interface.sol\":34409:34419  _msgSender */\n      tag_59\n        /* \"Interface.sol\":34409:34421  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"Interface.sol\":34397:34422  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Interface.sol\":34397:34431  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"Interface.sol\":34423:34430  spender */\n      dup10\n        /* \"Interface.sol\":34397:34431  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Interface.sol\":34397:34435  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"Interface.sol\":34397:34447  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"Interface.sol\":34365:34373  _approve */\n      tag_60\n        /* \"Interface.sol\":34365:34448  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"Interface.sol\":34465:34469  true */\n      0x01\n        /* \"Interface.sol\":34458:34469  return true */\n      swap1\n      pop\n        /* \"Interface.sol\":34261:34476  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Interface.sol\":32086:32203  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_36:\n        /* \"Interface.sol\":32152:32159  uint256 */\n      0x00\n        /* \"Interface.sol\":32178:32187  _balances */\n      dup1\n        /* \"Interface.sol\":32178:32196  _balances[account] */\n      0x00\n        /* \"Interface.sol\":32188:32195  account */\n      dup4\n        /* \"Interface.sol\":32178:32196  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Interface.sol\":32171:32196  return _balances[account] */\n      swap1\n      pop\n        /* \"Interface.sol\":32086:32203  function balanceOf(address account) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Interface.sol\":31081:31166  function symbol() public view returns (string memory) {... */\n    tag_38:\n        /* \"Interface.sol\":31120:31133  string memory */\n      0x60\n        /* \"Interface.sol\":31152:31159  _symbol */\n      0x04\n        /* \"Interface.sol\":31145:31159  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Interface.sol\":31081:31166  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Interface.sol\":34963:35229  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"Interface.sol\":35056:35060  bool */\n      0x00\n        /* \"Interface.sol\":35072:35201  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"Interface.sol\":35081:35093  _msgSender() */\n      tag_84\n        /* \"Interface.sol\":35081:35091  _msgSender */\n      tag_59\n        /* \"Interface.sol\":35081:35093  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"Interface.sol\":35095:35102  spender */\n      dup5\n        /* \"Interface.sol\":35104:35200  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"Interface.sol\":35143:35158  subtractedValue */\n      dup6\n        /* \"Interface.sol\":35104:35200  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"Interface.sol\":35104:35115  _allowances */\n      0x01\n        /* \"Interface.sol\":35104:35129  _allowances[_msgSender()] */\n      0x00\n        /* \"Interface.sol\":35116:35128  _msgSender() */\n      tag_86\n        /* \"Interface.sol\":35116:35126  _msgSender */\n      tag_59\n        /* \"Interface.sol\":35116:35128  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"Interface.sol\":35104:35129  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Interface.sol\":35104:35138  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"Interface.sol\":35130:35137  spender */\n      dup11\n        /* \"Interface.sol\":35104:35138  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Interface.sol\":35104:35142  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"Interface.sol\":35104:35200  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"Interface.sol\":35072:35080  _approve */\n      tag_60\n        /* \"Interface.sol\":35072:35201  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"Interface.sol\":35218:35222  true */\n      0x01\n        /* \"Interface.sol\":35211:35222  return true */\n      swap1\n      pop\n        /* \"Interface.sol\":34963:35229  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Interface.sol\":32406:32578  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"Interface.sol\":32492:32496  bool */\n      0x00\n        /* \"Interface.sol\":32508:32550  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"Interface.sol\":32518:32530  _msgSender() */\n      tag_89\n        /* \"Interface.sol\":32518:32528  _msgSender */\n      tag_59\n        /* \"Interface.sol\":32518:32530  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"Interface.sol\":32532:32541  recipient */\n      dup5\n        /* \"Interface.sol\":32543:32549  amount */\n      dup5\n        /* \"Interface.sol\":32508:32517  _transfer */\n      tag_64\n        /* \"Interface.sol\":32508:32550  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"Interface.sol\":32567:32571  true */\n      0x01\n        /* \"Interface.sol\":32560:32571  return true */\n      swap1\n      pop\n        /* \"Interface.sol\":32406:32578  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Interface.sol\":32636:32785  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"Interface.sol\":32725:32732  uint256 */\n      0x00\n        /* \"Interface.sol\":32751:32762  _allowances */\n      0x01\n        /* \"Interface.sol\":32751:32769  _allowances[owner] */\n      0x00\n        /* \"Interface.sol\":32763:32768  owner */\n      dup5\n        /* \"Interface.sol\":32751:32769  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Interface.sol\":32751:32778  _allowances[owner][spender] */\n      0x00\n        /* \"Interface.sol\":32770:32777  spender */\n      dup4\n        /* \"Interface.sol\":32751:32778  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Interface.sol\":32744:32778  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"Interface.sol\":32636:32785  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Interface.sol\":26199:26303  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"Interface.sol\":26252:26267  address payable */\n      0x00\n        /* \"Interface.sol\":26286:26296  msg.sender */\n      caller\n        /* \"Interface.sol\":26279:26296  return msg.sender */\n      swap1\n      pop\n        /* \"Interface.sol\":26199:26303  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Interface.sol\":38027:38367  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"Interface.sol\":38145:38146  0 */\n      0x00\n        /* \"Interface.sol\":38128:38147  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Interface.sol\":38128:38133  owner */\n      dup4\n        /* \"Interface.sol\":38128:38147  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Interface.sol\":38120:38188  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"Interface.sol\":38225:38226  0 */\n      0x00\n        /* \"Interface.sol\":38206:38227  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Interface.sol\":38206:38213  spender */\n      dup3\n        /* \"Interface.sol\":38206:38227  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Interface.sol\":38198:38266  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"Interface.sol\":38307:38313  amount */\n      dup1\n        /* \"Interface.sol\":38277:38288  _allowances */\n      0x01\n        /* \"Interface.sol\":38277:38295  _allowances[owner] */\n      0x00\n        /* \"Interface.sol\":38289:38294  owner */\n      dup6\n        /* \"Interface.sol\":38277:38295  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Interface.sol\":38277:38304  _allowances[owner][spender] */\n      0x00\n        /* \"Interface.sol\":38296:38303  spender */\n      dup5\n        /* \"Interface.sol\":38277:38304  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Interface.sol\":38277:38313  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Interface.sol\":38344:38351  spender */\n      dup2\n        /* \"Interface.sol\":38328:38360  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Interface.sol\":38337:38342  owner */\n      dup4\n        /* \"Interface.sol\":38328:38360  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Interface.sol\":38353:38359  amount */\n      dup4\n        /* \"Interface.sol\":38328:38360  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Interface.sol\":38027:38367  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Interface.sol\":35703:36233  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"Interface.sol\":35826:35827  0 */\n      0x00\n        /* \"Interface.sol\":35808:35828  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Interface.sol\":35808:35814  sender */\n      dup4\n        /* \"Interface.sol\":35808:35828  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Interface.sol\":35800:35870  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"Interface.sol\":35909:35910  0 */\n      0x00\n        /* \"Interface.sol\":35888:35911  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Interface.sol\":35888:35897  recipient */\n      dup3\n        /* \"Interface.sol\":35888:35911  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Interface.sol\":35880:35951  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"Interface.sol\":35962:36009  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"Interface.sol\":35983:35989  sender */\n      dup4\n        /* \"Interface.sol\":35991:36000  recipient */\n      dup4\n        /* \"Interface.sol\":36002:36008  amount */\n      dup4\n        /* \"Interface.sol\":35962:35982  _beforeTokenTransfer */\n      tag_99\n        /* \"Interface.sol\":35962:36009  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"Interface.sol\":36040:36111  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"Interface.sol\":36062:36068  amount */\n      dup2\n        /* \"Interface.sol\":36040:36111  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"Interface.sol\":36040:36049  _balances */\n      0x00\n        /* \"Interface.sol\":36040:36057  _balances[sender] */\n      dup1\n        /* \"Interface.sol\":36050:36056  sender */\n      dup8\n        /* \"Interface.sol\":36040:36057  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Interface.sol\":36040:36061  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"Interface.sol\":36040:36111  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"Interface.sol\":36020:36029  _balances */\n      0x00\n        /* \"Interface.sol\":36020:36037  _balances[sender] */\n      dup1\n        /* \"Interface.sol\":36030:36036  sender */\n      dup6\n        /* \"Interface.sol\":36020:36037  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Interface.sol\":36020:36111  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Interface.sol\":36144:36176  _balances[recipient].add(amount) */\n      tag_101\n        /* \"Interface.sol\":36169:36175  amount */\n      dup2\n        /* \"Interface.sol\":36144:36153  _balances */\n      0x00\n        /* \"Interface.sol\":36144:36164  _balances[recipient] */\n      dup1\n        /* \"Interface.sol\":36154:36163  recipient */\n      dup6\n        /* \"Interface.sol\":36144:36164  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Interface.sol\":36144:36168  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"Interface.sol\":36144:36176  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"Interface.sol\":36121:36130  _balances */\n      0x00\n        /* \"Interface.sol\":36121:36141  _balances[recipient] */\n      dup1\n        /* \"Interface.sol\":36131:36140  recipient */\n      dup5\n        /* \"Interface.sol\":36121:36141  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Interface.sol\":36121:36176  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Interface.sol\":36208:36217  recipient */\n      dup2\n        /* \"Interface.sol\":36191:36226  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Interface.sol\":36200:36206  sender */\n      dup4\n        /* \"Interface.sol\":36191:36226  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Interface.sol\":36219:36225  amount */\n      dup4\n        /* \"Interface.sol\":36191:36226  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Interface.sol\":35703:36233  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Interface.sol\":4557:4744  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"Interface.sol\":4643:4650  uint256 */\n      0x00\n        /* \"Interface.sol\":4675:4676  a */\n      dup4\n        /* \"Interface.sol\":4670:4671  b */\n      dup4\n        /* \"Interface.sol\":4670:4676  b <= a */\n      gt\n      iszero\n        /* \"Interface.sol\":4678:4690  errorMessage */\n      dup3\n        /* \"Interface.sol\":4662:4691  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"Interface.sol\":4701:4710  uint256 c */\n      0x00\n        /* \"Interface.sol\":4717:4718  b */\n      dup4\n        /* \"Interface.sol\":4713:4714  a */\n      dup6\n        /* \"Interface.sol\":4713:4718  a - b */\n      sub\n        /* \"Interface.sol\":4701:4718  uint256 c = a - b */\n      swap1\n      pop\n        /* \"Interface.sol\":4736:4737  c */\n      dup1\n        /* \"Interface.sol\":4729:4737  return c */\n      swap2\n      pop\n      pop\n        /* \"Interface.sol\":4557:4744  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Interface.sol\":3685:3861  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"Interface.sol\":3743:3750  uint256 */\n      0x00\n        /* \"Interface.sol\":3762:3771  uint256 c */\n      dup1\n        /* \"Interface.sol\":3778:3779  b */\n      dup3\n        /* \"Interface.sol\":3774:3775  a */\n      dup5\n        /* \"Interface.sol\":3774:3779  a + b */\n      add\n        /* \"Interface.sol\":3762:3779  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Interface.sol\":3802:3803  a */\n      dup4\n        /* \"Interface.sol\":3797:3798  c */\n      dup2\n        /* \"Interface.sol\":3797:3803  c >= a */\n      lt\n      iszero\n        /* \"Interface.sol\":3789:3835  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"Interface.sol\":3853:3854  c */\n      dup1\n        /* \"Interface.sol\":3846:3854  return c */\n      swap2\n      pop\n      pop\n        /* \"Interface.sol\":3685:3861  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Interface.sol\":39365:39457  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212209280eb72e4afc12629c0a045bb2ee847e8e305c87fea97c85d41caad054f89be64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620013a5380380620013a5833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b5b80821115620002ad57600081600090555060010162000293565b5090565b6110e480620002c16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101960289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108a60259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110666024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd16022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110416025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fae6023913960400191505060405180910390fd5b610cb6838383610fa8565b610d2181604051806060016040528060268152602001610ff3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209280eb72e4afc12629c0a045bb2ee847e8e305c87fea97c85d41caad054f89be64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13A5 CODESIZE SUB DUP1 PUSH3 0x13A5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2B1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x293 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10E4 DUP1 PUSH3 0x2C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1019 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1066 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1041 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFAE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212209280 0xEB PUSH19 0xE4AFC12629C0A045BB2EE847E8E305C87FEA97 0xC8 0x5D COINBASE 0xCA 0xAD SDIV 0x4F DUP10 0xBE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "30013:9446:0:-:0;;;30681:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30761:4;30753:5;:12;;;;;;;;;;;;:::i;:::-;;30785:6;30775:7;:16;;;;;;;;;;;;:::i;:::-;;30813:2;30801:9;;:14;;;;;;;;;;;;;;;;;;30681:141;;30013:9446;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101960289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108a60259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110666024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fd16022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110416025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fae6023913960400191505060405180910390fd5b610cb6838383610fa8565b610d2181604051806060016040528060268152602001610ff3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2090919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209280eb72e4afc12629c0a045bb2ee847e8e305c87fea97c85d41caad054f89be64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1019 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1066 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFD1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1041 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFAE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFF3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF20 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212209280 0xEB PUSH19 0xE4AFC12629C0A045BB2EE847E8E305C87FEA97 0xC8 0x5D COINBASE 0xCA 0xAD SDIV 0x4F DUP10 0xBE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "30013:9446:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30887:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32923:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;31930:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;33549:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;31789:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;34261:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32086:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;31081:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34963:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32406:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;32636:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;30887:81;30924:13;30956:5;30949:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30887:81;:::o;32923:166::-;33006:4;33022:39;33031:12;:10;:12::i;:::-;33045:7;33054:6;33022:8;:39::i;:::-;33078:4;33071:11;;32923:166;;;;:::o;31930:98::-;31983:7;32009:12;;32002:19;;31930:98;:::o;33549:317::-;33655:4;33671:36;33681:6;33689:9;33700:6;33671:9;:36::i;:::-;33717:121;33726:6;33734:12;:10;:12::i;:::-;33748:89;33786:6;33748:89;;;;;;;;;;;;;;;;;:11;:19;33760:6;33748:19;;;;;;;;;;;;;;;:33;33768:12;:10;:12::i;:::-;33748:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;33717:8;:121::i;:::-;33855:4;33848:11;;33549:317;;;;;:::o;31789:81::-;31830:5;31854:9;;;;;;;;;;;31847:16;;31789:81;:::o;34261:215::-;34349:4;34365:83;34374:12;:10;:12::i;:::-;34388:7;34397:50;34436:10;34397:11;:25;34409:12;:10;:12::i;:::-;34397:25;;;;;;;;;;;;;;;:34;34423:7;34397:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;34365:8;:83::i;:::-;34465:4;34458:11;;34261:215;;;;:::o;32086:117::-;32152:7;32178:9;:18;32188:7;32178:18;;;;;;;;;;;;;;;;32171:25;;32086:117;;;:::o;31081:85::-;31120:13;31152:7;31145:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31081:85;:::o;34963:266::-;35056:4;35072:129;35081:12;:10;:12::i;:::-;35095:7;35104:96;35143:15;35104:96;;;;;;;;;;;;;;;;;:11;:25;35116:12;:10;:12::i;:::-;35104:25;;;;;;;;;;;;;;;:34;35130:7;35104:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;35072:8;:129::i;:::-;35218:4;35211:11;;34963:266;;;;:::o;32406:172::-;32492:4;32508:42;32518:12;:10;:12::i;:::-;32532:9;32543:6;32508:9;:42::i;:::-;32567:4;32560:11;;32406:172;;;;:::o;32636:149::-;32725:7;32751:11;:18;32763:5;32751:18;;;;;;;;;;;;;;;:27;32770:7;32751:27;;;;;;;;;;;;;;;;32744:34;;32636:149;;;;:::o;26199:104::-;26252:15;26286:10;26279:17;;26199:104;:::o;38027:340::-;38145:1;38128:19;;:5;:19;;;;38120:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38225:1;38206:21;;:7;:21;;;;38198:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38307:6;38277:11;:18;38289:5;38277:18;;;;;;;;;;;;;;;:27;38296:7;38277:27;;;;;;;;;;;;;;;:36;;;;38344:7;38328:32;;38337:5;38328:32;;;38353:6;38328:32;;;;;;;;;;;;;;;;;;38027:340;;;:::o;35703:530::-;35826:1;35808:20;;:6;:20;;;;35800:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35909:1;35888:23;;:9;:23;;;;35880:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35962:47;35983:6;35991:9;36002:6;35962:20;:47::i;:::-;36040:71;36062:6;36040:71;;;;;;;;;;;;;;;;;:9;:17;36050:6;36040:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;36020:9;:17;36030:6;36020:17;;;;;;;;;;;;;;;:91;;;;36144:32;36169:6;36144:9;:20;36154:9;36144:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;36121:9;:20;36131:9;36121:20;;;;;;;;;;;;;;;:55;;;;36208:9;36191:35;;36200:6;36191:35;;;36219:6;36191:35;;;;;;;;;;;;;;;;;;35703:530;;;:::o;4557:187::-;4643:7;4675:1;4670;:6;;4678:12;4662:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4701:9;4717:1;4713;:5;4701:17;;4736:1;4729:8;;;4557:187;;;;;:::o;3685:176::-;3743:7;3762:9;3778:1;3774;:5;3762:17;;3802:1;3797;:6;;3789:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3853:1;3846:8;;;3685:176;;;;:::o;39365:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "864800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30761,
									"end": 30765,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30758,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30753,
									"end": 30765,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30785,
									"end": 30791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30775,
									"end": 30791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30813,
									"end": 30815,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 30801,
									"end": 30810,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 30801,
									"end": 30810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30801,
									"end": 30815,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30681,
									"end": 30822,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30013,
									"end": 39459,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209280eb72e4afc12629c0a045bb2ee847e8e305c87fea97c85d41caad054f89be64736f6c634300060c0033",
									".code": [
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30013,
											"end": 39459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30924,
											"end": 30937,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30956,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30949,
											"end": 30961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30887,
											"end": 30968,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33006,
											"end": 33010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33022,
											"end": 33061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 33031,
											"end": 33043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 33031,
											"end": 33041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 33031,
											"end": 33043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33031,
											"end": 33043,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 33031,
											"end": 33043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33045,
											"end": 33052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33054,
											"end": 33060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33022,
											"end": 33030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33022,
											"end": 33061,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33022,
											"end": 33061,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 33022,
											"end": 33061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33078,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33071,
											"end": 33082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33071,
											"end": 33082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32923,
											"end": 33089,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31983,
											"end": 31990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32009,
											"end": 32021,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32009,
											"end": 32021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32002,
											"end": 32021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32002,
											"end": 32021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31930,
											"end": 32028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33655,
											"end": 33659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33671,
											"end": 33707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 33681,
											"end": 33687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33689,
											"end": 33698,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33671,
											"end": 33680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33671,
											"end": 33707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33671,
											"end": 33707,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 33671,
											"end": 33707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33717,
											"end": 33838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33726,
											"end": 33732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33734,
											"end": 33744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 33734,
											"end": 33746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33734,
											"end": 33746,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33734,
											"end": 33746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33786,
											"end": 33792,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "PUSH data",
											"source": 0,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33759,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33760,
											"end": 33766,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33748,
											"end": 33767,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33768,
											"end": 33780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 33768,
											"end": 33778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 33768,
											"end": 33780,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33768,
											"end": 33780,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 33768,
											"end": 33780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 33748,
											"end": 33785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 33748,
											"end": 33837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33717,
											"end": 33725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33717,
											"end": 33838,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33717,
											"end": 33838,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33717,
											"end": 33838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33855,
											"end": 33859,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33848,
											"end": 33859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33848,
											"end": 33859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33866,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31830,
											"end": 31835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 31854,
											"end": 31863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 31863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31847,
											"end": 31863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31789,
											"end": 31870,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34349,
											"end": 34353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34365,
											"end": 34448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34374,
											"end": 34386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 34374,
											"end": 34384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 34374,
											"end": 34386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34374,
											"end": 34386,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 34374,
											"end": 34386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34388,
											"end": 34395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 34436,
											"end": 34446,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34408,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34409,
											"end": 34421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 34409,
											"end": 34419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 34409,
											"end": 34421,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34409,
											"end": 34421,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 34409,
											"end": 34421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34397,
											"end": 34422,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34423,
											"end": 34430,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 34397,
											"end": 34435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34397,
											"end": 34447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34397,
											"end": 34447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34397,
											"end": 34447,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 34397,
											"end": 34447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34365,
											"end": 34373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34365,
											"end": 34448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34365,
											"end": 34448,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34365,
											"end": 34448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34469,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34458,
											"end": 34469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34458,
											"end": 34469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34261,
											"end": 34476,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32152,
											"end": 32159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32178,
											"end": 32187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32188,
											"end": 32195,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32178,
											"end": 32196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32086,
											"end": 32203,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31120,
											"end": 31133,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31152,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31081,
											"end": 31166,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35056,
											"end": 35060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35072,
											"end": 35201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 35081,
											"end": 35093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 35081,
											"end": 35091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35081,
											"end": 35093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35081,
											"end": 35093,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 35081,
											"end": 35093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 35143,
											"end": 35158,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "PUSH data",
											"source": 0,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35115,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35116,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35116,
											"end": 35126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35116,
											"end": 35128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35116,
											"end": 35128,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35116,
											"end": 35128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35104,
											"end": 35129,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35130,
											"end": 35137,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 35104,
											"end": 35142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 35104,
											"end": 35200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35072,
											"end": 35201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35072,
											"end": 35201,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 35072,
											"end": 35201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35218,
											"end": 35222,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35211,
											"end": 35222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35211,
											"end": 35222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34963,
											"end": 35229,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32492,
											"end": 32496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32508,
											"end": 32550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 32518,
											"end": 32530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32518,
											"end": 32528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 32518,
											"end": 32530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32518,
											"end": 32530,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32518,
											"end": 32530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32541,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32543,
											"end": 32549,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32508,
											"end": 32517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32508,
											"end": 32550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32508,
											"end": 32550,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 32508,
											"end": 32550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32567,
											"end": 32571,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32560,
											"end": 32571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32560,
											"end": 32571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32406,
											"end": 32578,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32725,
											"end": 32732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32751,
											"end": 32762,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32763,
											"end": 32768,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32751,
											"end": 32769,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32770,
											"end": 32777,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32751,
											"end": 32778,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32744,
											"end": 32778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32744,
											"end": 32778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32636,
											"end": 32785,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26199,
											"end": 26303,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26199,
											"end": 26303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26252,
											"end": 26267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26286,
											"end": 26296,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26279,
											"end": 26296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26199,
											"end": 26303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26199,
											"end": 26303,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38027,
											"end": 38367,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38027,
											"end": 38367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38145,
											"end": 38146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38128,
											"end": 38147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38128,
											"end": 38147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38128,
											"end": 38133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38128,
											"end": 38147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38128,
											"end": 38147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38128,
											"end": 38147,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38128,
											"end": 38147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH data",
											"source": 0,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 38120,
											"end": 38188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38225,
											"end": 38226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38206,
											"end": 38227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38206,
											"end": 38227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38206,
											"end": 38213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38206,
											"end": 38227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38206,
											"end": 38227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38206,
											"end": 38227,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38206,
											"end": 38227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH data",
											"source": 0,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 38198,
											"end": 38266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38307,
											"end": 38313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38288,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38289,
											"end": 38294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38277,
											"end": 38295,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38296,
											"end": 38303,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38277,
											"end": 38304,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38277,
											"end": 38313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38344,
											"end": 38351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38337,
											"end": 38342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 38353,
											"end": 38359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38328,
											"end": 38360,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 38027,
											"end": 38367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38027,
											"end": 38367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38027,
											"end": 38367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38027,
											"end": 38367,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 35703,
											"end": 36233,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 35703,
											"end": 36233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35826,
											"end": 35827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35808,
											"end": 35828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35808,
											"end": 35828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35808,
											"end": 35814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35808,
											"end": 35828,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35808,
											"end": 35828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35808,
											"end": 35828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35808,
											"end": 35828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH data",
											"source": 0,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 35800,
											"end": 35870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35909,
											"end": 35910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35888,
											"end": 35911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35888,
											"end": 35911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35888,
											"end": 35897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35888,
											"end": 35911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35888,
											"end": 35911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35888,
											"end": 35911,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35888,
											"end": 35911,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH data",
											"source": 0,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 35880,
											"end": 35951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35962,
											"end": 36009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 35983,
											"end": 35989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35991,
											"end": 36000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36002,
											"end": 36008,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35962,
											"end": 35982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 35962,
											"end": 36009,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35962,
											"end": 36009,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 35962,
											"end": 36009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36062,
											"end": 36068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "PUSH data",
											"source": 0,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36050,
											"end": 36056,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 36040,
											"end": 36061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36040,
											"end": 36111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36030,
											"end": 36036,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36020,
											"end": 36037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36111,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36020,
											"end": 36111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 36169,
											"end": 36175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36154,
											"end": 36163,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 36144,
											"end": 36168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 36144,
											"end": 36176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36144,
											"end": 36176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36144,
											"end": 36176,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 36144,
											"end": 36176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36131,
											"end": 36140,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36121,
											"end": 36141,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36176,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36121,
											"end": 36176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36200,
											"end": 36206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 36219,
											"end": 36225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36191,
											"end": 36226,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 36233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 36233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 36233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35703,
											"end": 36233,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 4744,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4557,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4643,
											"end": 4650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4713,
											"end": 4714,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4713,
											"end": 4718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4701,
											"end": 4718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4736,
											"end": 4737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4729,
											"end": 4737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4729,
											"end": 4737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4729,
											"end": 4737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4744,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4744,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3685,
											"end": 3861,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3685,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3743,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 3775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 3779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3803,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3797,
											"end": 3803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3789,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3853,
											"end": 3854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3861,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3861,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39365,
											"end": 39457,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 39365,
											"end": 39457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39365,
											"end": 39457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39365,
											"end": 39457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39365,
											"end": 39457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39365,
											"end": 39457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface.sol\":{\"keccak256\":\"0xc5f9c5a6e0245aa5e041dda9f3886df9416d001e60789ae198d1e3698917f2fb\",\"urls\":[\"bzz-raw://af08b0a19101d26123c6bd464785d8e5320864b59c95068e63eac4d38bf7c556\",\"dweb:/ipfs/QmU2ddgdeVSa97yqnb7ok4AhfVmpnb9c3zmKZN7nkVoNs8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1223,
								"contract": "Interface.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1229,
								"contract": "Interface.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1231,
								"contract": "Interface.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1233,
								"contract": "Interface.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1235,
								"contract": "Interface.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1237,
								"contract": "Interface.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Interface.sol\":18520:25588  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Interface.sol\":18520:25588  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206753947b1aaaacf0c32f9fb203fc8151fe64a7eac65624b9fa1ee6e2dcb6d52164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206753947b1aaaacf0c32f9fb203fc8151fe64a7eac65624b9fa1ee6e2dcb6d52164736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x53947B1AAAACF0C3 0x2F SWAP16 0xB2 SUB 0xFC DUP2 MLOAD INVALID PUSH5 0xA7EAC65624 0xB9 STATICCALL 0x1E 0xE6 0xE2 0xDC 0xB6 0xD5 0x21 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "18520:7068:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206753947b1aaaacf0c32f9fb203fc8151fe64a7eac65624b9fa1ee6e2dcb6d52164736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x53947B1AAAACF0C3 0x2F SWAP16 0xB2 SUB 0xFC DUP2 MLOAD INVALID PUSH5 0xA7EAC65624 0xB9 STATICCALL 0x1E 0xE6 0xE2 0xDC 0xB6 0xD5 0x21 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "18520:7068:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18520,
									"end": 25588,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18520,
									"end": 25588,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206753947b1aaaacf0c32f9fb203fc8151fe64a7eac65624b9fa1ee6e2dcb6d52164736f6c634300060c0033",
									".code": [
										{
											"begin": 18520,
											"end": 25588,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18520,
											"end": 25588,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18520,
											"end": 25588,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18520,
											"end": 25588,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18520,
											"end": 25588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18520,
											"end": 25588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18520,
											"end": 25588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18520,
											"end": 25588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18520,
											"end": 25588,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface.sol\":{\"keccak256\":\"0xc5f9c5a6e0245aa5e041dda9f3886df9416d001e60789ae198d1e3698917f2fb\",\"urls\":[\"bzz-raw://af08b0a19101d26123c6bd464785d8e5320864b59c95068e63eac4d38bf7c556\",\"dweb:/ipfs/QmU2ddgdeVSa97yqnb7ok4AhfVmpnb9c3zmKZN7nkVoNs8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface.sol\":{\"keccak256\":\"0xc5f9c5a6e0245aa5e041dda9f3886df9416d001e60789ae198d1e3698917f2fb\",\"urls\":[\"bzz-raw://af08b0a19101d26123c6bd464785d8e5320864b59c95068e63eac4d38bf7c556\",\"dweb:/ipfs/QmU2ddgdeVSa97yqnb7ok4AhfVmpnb9c3zmKZN7nkVoNs8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMigratorChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address)": "ce5494bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface.sol\":\"IMigratorChef\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface.sol\":{\"keccak256\":\"0xc5f9c5a6e0245aa5e041dda9f3886df9416d001e60789ae198d1e3698917f2fb\",\"urls\":[\"bzz-raw://af08b0a19101d26123c6bd464785d8e5320864b59c95068e63eac4d38bf7c556\",\"dweb:/ipfs/QmU2ddgdeVSa97yqnb7ok4AhfVmpnb9c3zmKZN7nkVoNs8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface.sol\":{\"keccak256\":\"0xc5f9c5a6e0245aa5e041dda9f3886df9416d001e60789ae198d1e3698917f2fb\",\"urls\":[\"bzz-raw://af08b0a19101d26123c6bd464785d8e5320864b59c95068e63eac4d38bf7c556\",\"dweb:/ipfs/QmU2ddgdeVSa97yqnb7ok4AhfVmpnb9c3zmKZN7nkVoNs8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1106,
								"contract": "Interface.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Interface.sol\":14663:17767  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Interface.sol\":14663:17767  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203749e8a8098bafcc0fd7aa6e9e1dc7ede8a4cb0ccc092322406ccb2632e1aad764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203749e8a8098bafcc0fd7aa6e9e1dc7ede8a4cb0ccc092322406ccb2632e1aad764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0x49 0xE8 0xA8 MULMOD DUP12 0xAF 0xCC 0xF 0xD7 0xAA PUSH15 0x9E1DC7EDE8A4CB0CCC092322406CCB 0x26 ORIGIN 0xE1 0xAA 0xD7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "14663:3104:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203749e8a8098bafcc0fd7aa6e9e1dc7ede8a4cb0ccc092322406ccb2632e1aad764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0x49 0xE8 0xA8 MULMOD DUP12 0xAF 0xCC 0xF 0xD7 0xAA PUSH15 0x9E1DC7EDE8A4CB0CCC092322406CCB 0x26 ORIGIN 0xE1 0xAA 0xD7 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "14663:3104:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14663,
									"end": 17767,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14663,
									"end": 17767,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203749e8a8098bafcc0fd7aa6e9e1dc7ede8a4cb0ccc092322406ccb2632e1aad764736f6c634300060c0033",
									".code": [
										{
											"begin": 14663,
											"end": 17767,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 17767,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 17767,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 17767,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14663,
											"end": 17767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14663,
											"end": 17767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 17767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14663,
											"end": 17767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 17767,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface.sol\":{\"keccak256\":\"0xc5f9c5a6e0245aa5e041dda9f3886df9416d001e60789ae198d1e3698917f2fb\",\"urls\":[\"bzz-raw://af08b0a19101d26123c6bd464785d8e5320864b59c95068e63eac4d38bf7c556\",\"dweb:/ipfs/QmU2ddgdeVSa97yqnb7ok4AhfVmpnb9c3zmKZN7nkVoNs8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Interface.sol\":3433:8011  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Interface.sol\":3433:8011  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122016199ff0a5516220042d83d213a7bce6b35720f41e8df46e9ae94fac240778ec64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016199ff0a5516220042d83d213a7bce6b35720f41e8df46e9ae94fac240778ec64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT SWAP16 CREATE 0xA5 MLOAD PUSH3 0x20042D DUP4 0xD2 SGT 0xA7 0xBC 0xE6 0xB3 JUMPI KECCAK256 DELEGATECALL 0x1E DUP14 DELEGATECALL PUSH15 0x9AE94FAC240778EC64736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "3433:4578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016199ff0a5516220042d83d213a7bce6b35720f41e8df46e9ae94fac240778ec64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND NOT SWAP16 CREATE 0xA5 MLOAD PUSH3 0x20042D DUP4 0xD2 SGT 0xA7 0xBC 0xE6 0xB3 JUMPI KECCAK256 DELEGATECALL 0x1E DUP14 DELEGATECALL PUSH15 0x9AE94FAC240778EC64736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "3433:4578:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3433,
									"end": 8011,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3433,
									"end": 8011,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016199ff0a5516220042d83d213a7bce6b35720f41e8df46e9ae94fac240778ec64736f6c634300060c0033",
									".code": [
										{
											"begin": 3433,
											"end": 8011,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3433,
											"end": 8011,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3433,
											"end": 8011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3433,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3433,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 8011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3433,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 8011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3433,
											"end": 8011,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Interface.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Interface.sol\":{\"keccak256\":\"0xc5f9c5a6e0245aa5e041dda9f3886df9416d001e60789ae198d1e3698917f2fb\",\"urls\":[\"bzz-raw://af08b0a19101d26123c6bd464785d8e5320864b59c95068e63eac4d38bf7c556\",\"dweb:/ipfs/QmU2ddgdeVSa97yqnb7ok4AhfVmpnb9c3zmKZN7nkVoNs8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Interface.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Interface.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Interface.sol": {
				"ast": {
					"absolutePath": "Interface.sol",
					"exportedSymbols": {
						"Address": [
							475
						],
						"Context": [
							1100
						],
						"ERC20": [
							1709
						],
						"EnumerableSet": [
							1078
						],
						"IERC20": [
							77
						],
						"IMigratorChef": [
							1718
						],
						"Ownable": [
							1207
						],
						"SafeERC20": [
							684
						],
						"SafeMath": [
							272
						]
					},
					"id": 1719,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "126:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "151:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "245:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "336:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "362:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "361:9:0"
									},
									"scope": 77,
									"src": "316:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "377:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "473:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "472:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "512:9:0"
									},
									"scope": 77,
									"src": "454:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "528:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "760:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "779:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "759:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "813:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "813:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "812:6:0"
									},
									"scope": 77,
									"src": "742:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "825:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1113:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1128:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1112:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1167:9:0"
									},
									"scope": 77,
									"src": "1094:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1183:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1847:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1864:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1846:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1898:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1897:6:0"
									},
									"scope": 77,
									"src": "1830:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1910:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2249:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2268:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2232:51:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2302:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2301:6:0"
									},
									"scope": 77,
									"src": "2211:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2314:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2492:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2514:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2534:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2491:57:0"
									},
									"src": "2477:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2555:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2723:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2746:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2771:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2722:63:0"
									},
									"src": "2708:78:0"
								}
							],
							"scope": 1719,
							"src": "222:2566:0"
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2844:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "2869:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 272,
							"linearizedBaseContracts": [
								272
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "3752:109:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 104,
														"src": "3762:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3762:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "3774:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "3778:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3774:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3762:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 96,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "3797:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 97,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "3802:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3797:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3805:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3789:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "3789:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "3853:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 88,
												"id": 103,
												"nodeType": "Return",
												"src": "3846:8:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3456:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "3698:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "3709:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3697:22:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "3743:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3742:9:0"
									},
									"scope": 272,
									"src": "3685:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "4199:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 116,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "4220:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 117,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "4223:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 115,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															122,
															150
														],
														"referencedDeclaration": 150,
														"src": "4216:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4216:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 114,
												"id": 120,
												"nodeType": "Return",
												"src": "4209:50:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "3867:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "4145:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "4156:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4144:22:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 122,
												"src": "4190:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4189:9:0"
									},
									"scope": 272,
									"src": "4132:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4652:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 135,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "4670:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 136,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "4675:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 138,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "4678:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4662:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4662:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "4662:29:0"
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 149,
														"src": "4701:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 141,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 143,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "4713:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 144,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "4717:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4713:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4701:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 147,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "4736:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 148,
												"nodeType": "Return",
												"src": "4729:8:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4272:280:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4570:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4581:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4592:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4569:50:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 150,
												"src": "4643:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4642:9:0"
									},
									"scope": 272,
									"src": "4557:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "5058:392:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 160,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "5290:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5295:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5290:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 166,
												"nodeType": "IfStatement",
												"src": "5286:45:0",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "5298:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5319:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 159,
															"id": 164,
															"nodeType": "Return",
															"src": "5312:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 184,
														"src": "5341:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 172,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "5353:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "5357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5353:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5341:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 174,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "5376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 175,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "5380:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5376:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 177,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "5385:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5376:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5388:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5368:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "5368:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 182,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "5442:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 159,
												"id": 183,
												"nodeType": "Return",
												"src": "5435:8:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4750:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "5004:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "5015:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5003:22:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 185,
												"src": "5049:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5048:9:0"
									},
									"scope": 272,
									"src": "4991:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "5979:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 196,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "6000:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 197,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "6003:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6006:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 195,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															202,
															230
														],
														"referencedDeclaration": 230,
														"src": "5996:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 194,
												"id": 200,
												"nodeType": "Return",
												"src": "5989:46:0"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "5456:451:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "5925:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "5936:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5924:22:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "5970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5969:9:0"
									},
									"scope": 272,
									"src": "5912:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "6619:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 215,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "6637:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6641:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6637:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 218,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "6644:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6629:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6629:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "6629:28:0"
											},
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 229,
														"src": "6667:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 223,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "6679:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 224,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "6683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6679:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6667:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 227,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 222,
													"src": "6788:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 213,
												"id": 228,
												"nodeType": "Return",
												"src": "6781:8:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "6048:471:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6537:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6548:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6559:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6536:50:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "6610:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6609:9:0"
									},
									"scope": 272,
									"src": "6524:272:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "7314:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 241,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7335:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 242,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "7338:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7341:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 240,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															247,
															271
														],
														"referencedDeclaration": 271,
														"src": "7331:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7331:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 245,
												"nodeType": "Return",
												"src": "7324:44:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "6802:440:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7260:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7271:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7259:22:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 247,
												"src": "7305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7304:9:0"
									},
									"scope": 272,
									"src": "7247:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "7941:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "7959:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7964:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7959:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 263,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "7967:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7951:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "7951:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "7997:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 267,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "8001:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7997:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 258,
												"id": 269,
												"nodeType": "Return",
												"src": "7990:12:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "7381:460:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "7859:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "7870:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "7881:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7881:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7858:50:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 271,
												"src": "7932:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7931:9:0"
									},
									"scope": 272,
									"src": "7846:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1719,
							"src": "3433:4578:0"
						},
						{
							"id": 273,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "8067:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 274,
								"nodeType": "StructuredDocumentation",
								"src": "8092:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 475,
							"linearizedBaseContracts": [
								475
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "8818:544:0",
										"statements": [
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 299,
														"src": "9070:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 282,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9070:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 284,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "9070:16:0"
											},
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 299,
														"src": "9096:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 285,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9118:66:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9096:88:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9259:36:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9261:32:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "9285:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "9273:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9273:20:0"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "9261:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 277,
														"isOffset": false,
														"isSlot": false,
														"src": "9285:7:0",
														"valueSize": 1
													},
													{
														"declaration": 283,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:8:0",
														"valueSize": 1
													}
												],
												"id": 289,
												"nodeType": "InlineAssembly",
												"src": "9250:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 290,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "9312:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 291,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "9324:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "9312:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 293,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "9339:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9351:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "9339:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9312:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 297,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9311:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 281,
												"id": 298,
												"nodeType": "Return",
												"src": "9304:51:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "8182:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "8772:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8771:17:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "8812:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8812:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8811:6:0"
									},
									"scope": 475,
									"src": "8752:610:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "10350:320:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 311,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "10376:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$475",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$475",
																				"typeString": "library Address"
																			}
																		],
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10368:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 309,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10368:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10368:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10368:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 314,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "10393:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10368:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10401:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10360:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "10360:73:0"
											},
											{
												"assignments": [
													320,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 333,
														"src": "10522:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 319,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10522:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 327,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10572:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 321,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "10540:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10540:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 323,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "10563:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10540:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10540:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10521:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 329,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "10593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10602:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10585:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "10585:78:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "9368:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "10298:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10298:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 334,
												"src": "10325:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10297:43:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10350:0:0"
									},
									"scope": 475,
									"src": "10279:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "11500:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 345,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "11530:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 346,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "11538:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11544:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 344,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															351,
															371
														],
														"referencedDeclaration": 371,
														"src": "11517:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11517:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 343,
												"id": 349,
												"nodeType": "Return",
												"src": "11510:67:0"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "10676:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "11433:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "11449:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11449:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11432:35:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 351,
												"src": "11486:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11486:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11485:14:0"
									},
									"scope": 475,
									"src": "11411:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "11923:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 364,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "11963:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 365,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "11971:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11977:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 367,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "11980:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 363,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "11940:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11940:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 362,
												"id": 369,
												"nodeType": "Return",
												"src": "11933:60:0"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "11590:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "11828:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "11844:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11844:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "11863:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 357,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11863:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11827:63:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 371,
												"src": "11909:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11909:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11908:14:0"
									},
									"scope": 475,
									"src": "11806:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "12475:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 384,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "12514:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 385,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "12522:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 386,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "12528:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12535:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 383,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															391,
															424
														],
														"referencedDeclaration": 424,
														"src": "12492:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12492:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 382,
												"id": 389,
												"nodeType": "Return",
												"src": "12485:94:0"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "12006:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "12393:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "12409:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12409:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "12428:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12392:50:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "12461:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12461:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12460:14:0"
									},
									"scope": 475,
									"src": "12362:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "12975:172:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 408,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "13001:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$475",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$475",
																				"typeString": "library Address"
																			}
																		],
																		"id": 407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12993:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 406,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12993:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12993:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12993:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 411,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "13018:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12993:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13025:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12985:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "12985:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 417,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "13106:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 418,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "13114:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 419,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "13120:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 420,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "13127:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 416,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "13083:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13083:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 404,
												"id": 422,
												"nodeType": "Return",
												"src": "13076:64:0"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "12592:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "12865:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "12881:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12881:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "12900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "12915:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12915:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12864:78:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "12961:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12961:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12960:14:0"
									},
									"scope": 475,
									"src": "12834:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "13297:814:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 439,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "13326:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 438,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "13315:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13315:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13335:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13307:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "13307:60:0"
											},
											{
												"assignments": [
													445,
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 473,
														"src": "13438:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 444,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13438:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 473,
														"src": "13452:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 446,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13452:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 452,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "13510:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 448,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "13479:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13479:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 450,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "13499:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13479:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13479:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13437:78:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 455,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 445,
													"src": "13529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 471,
													"nodeType": "Block",
													"src": "13586:519:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 459,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "13670:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13670:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13690:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13670:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 469,
																"nodeType": "Block",
																"src": "14042:53:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 466,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 432,
																					"src": "14067:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 465,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "14060:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14060:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 468,
																		"nodeType": "ExpressionStatement",
																		"src": "14060:20:0"
																	}
																]
															},
															"id": 470,
															"nodeType": "IfStatement",
															"src": "13666:429:0",
															"trueBody": {
																"id": 464,
																"nodeType": "Block",
																"src": "13693:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "13877:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "13899:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "13928:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "13922:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13922:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "13903:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13971:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "13975:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "13967:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13967:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "13988:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "13960:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13960:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13960:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 447,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13928:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 447,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13975:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 463,
																		"nodeType": "InlineAssembly",
																		"src": "13868:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 472,
												"nodeType": "IfStatement",
												"src": "13525:580:0",
												"trueBody": {
													"id": 458,
													"nodeType": "Block",
													"src": "13538:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 456,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "13559:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 436,
															"id": 457,
															"nodeType": "Return",
															"src": "13552:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "13185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "13201:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13201:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "13220:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "13238:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13238:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13184:81:0"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 474,
												"src": "13283:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13283:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13282:14:0"
									},
									"scope": 475,
									"src": "13153:958:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1719,
							"src": "8160:5953:0"
						},
						{
							"id": 476,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14177:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 477,
								"nodeType": "StructuredDocumentation",
								"src": "14205:457:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 684,
							"linearizedBaseContracts": [
								684
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 480,
									"libraryName": {
										"contractScope": null,
										"id": 478,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 272,
										"src": "14693:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$272",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "14687:27:0",
									"typeName": {
										"id": 479,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14706:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 483,
									"libraryName": {
										"contractScope": null,
										"id": 481,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 475,
										"src": "14725:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$475",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "14719:26:0",
									"typeName": {
										"id": 482,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14737:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "14823:103:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 493,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "14853:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 496,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "14883:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "14883:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14883:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 499,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "14908:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 500,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "14912:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 494,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "14860:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14860:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14860:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 492,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "14833:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14833:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "14833:86:0"
											}
										]
									},
									"documentation": null,
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "14773:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 484,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "14773:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "14787:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "14799:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14772:41:0"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14823:0:0"
									},
									"scope": 684,
									"src": "14751:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "15022:113:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 517,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "15052:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 520,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 507,
																			"src": "15082:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 58,
																		"src": "15082:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15082:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 523,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "15111:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 524,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "15117:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "15121:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 518,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "15059:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15059:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15059:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "15032:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15032:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "15032:96:0"
											}
										]
									},
									"documentation": null,
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "14958:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 506,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "14958:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "14972:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "14986:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 530,
												"src": "14998:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14957:55:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15022:0:0"
									},
									"scope": 684,
									"src": "14932:203:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "15471:537:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 541,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "15760:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15769:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15760:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 544,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15759:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 549,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "15800:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$684",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$684",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 548,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "15792:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 547,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "15792:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 550,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15792:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 551,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 535,
																					"src": "15807:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 545,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 533,
																					"src": "15776:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 36,
																				"src": "15776:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15776:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15819:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "15776:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 555,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15775:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15759:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15835:56:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15751:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15751:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "15751:150:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 561,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "15931:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 564,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "15961:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "15961:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15961:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 567,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "15985:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 568,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "15994:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 562,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "15938:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15938:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15938:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "15911:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15911:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "15911:90:0"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "15141:249:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "15416:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 532,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "15416:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "15430:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 573,
												"src": "15447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15415:46:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15471:0:0"
									},
									"scope": 684,
									"src": "15395:613:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "16100:197:0",
										"statements": [
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 608,
														"src": "16110:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16110:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 593,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "16177:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 588,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "16157:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$684",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$684",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16149:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 586,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16149:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16149:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 590,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "16164:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 584,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "16133:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "16133:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16133:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 105,
														"src": "16133:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16133:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16110:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 597,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "16213:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 600,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 575,
																			"src": "16243:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "16243:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16243:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 603,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "16267:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 604,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "16276:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 598,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16220:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16220:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16220:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 596,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "16193:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16193:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "16193:97:0"
											}
										]
									},
									"documentation": null,
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "16045:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 574,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "16045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "16059:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "16076:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16044:46:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16100:0:0"
									},
									"scope": 684,
									"src": "16014:283:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "16389:242:0",
										"statements": [
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 645,
														"src": "16399:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16399:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 629,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "16466:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16473:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 624,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "16446:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$684",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$684",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16438:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 622,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16438:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16438:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 626,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "16453:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 620,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "16422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "16422:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16422:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "16422:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16422:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16399:118:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 634,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "16547:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 637,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "16577:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "16577:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16577:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 640,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "16601:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 641,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "16610:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 635,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "16554:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16554:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16554:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 633,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "16527:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16527:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "16527:97:0"
											}
										]
									},
									"documentation": null,
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 646,
												"src": "16334:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 610,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "16334:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 646,
												"src": "16348:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 646,
												"src": "16365:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16333:46:0"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16389:0:0"
									},
									"scope": 684,
									"src": "16303:328:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "17084:681:0",
										"statements": [
											{
												"assignments": [
													655
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 682,
														"src": "17433:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 654,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17433:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "17487:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17493:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 658,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "17467:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17459:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 656,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17459:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17459:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 371,
														"src": "17459:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17459:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17433:95:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 665,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "17542:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17542:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17562:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17542:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 681,
												"nodeType": "IfStatement",
												"src": "17538:221:0",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "17565:194:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 672,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 655,
																				"src": "17682:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 674,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17695:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 673,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "17695:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 675,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "17694:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 670,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "17671:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "17671:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17671:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17703:44:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 669,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "17663:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17663:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 679,
															"nodeType": "ExpressionStatement",
															"src": "17663:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "16637:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 683,
												"src": "17043:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 648,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "17043:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 683,
												"src": "17057:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17042:33:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17084:0:0"
									},
									"scope": 684,
									"src": "17014:751:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1719,
							"src": "14663:3104:0"
						},
						{
							"id": 685,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17829:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 686,
								"nodeType": "StructuredDocumentation",
								"src": "17854:665:0",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 1078,
							"linearizedBaseContracts": [
								1078
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 694,
									"members": [
										{
											"constant": false,
											"id": 689,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 694,
											"src": "19042:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 687,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 688,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "19042:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 693,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 694,
											"src": "19193:37:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 692,
												"keyType": {
													"id": 690,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "19193:28:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 1078,
									"src": "18988:249:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "19476:335:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "19490:22:0",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 705,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "19501:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 706,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "19506:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 704,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "19491:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$694_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19491:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 732,
													"nodeType": "Block",
													"src": "19768:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19789:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 703,
															"id": 731,
															"nodeType": "Return",
															"src": "19782:12:0"
														}
													]
												},
												"id": 733,
												"nodeType": "IfStatement",
												"src": "19486:319:0",
												"trueBody": {
													"id": 729,
													"nodeType": "Block",
													"src": "19514:248:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 714,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "19545:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 709,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 697,
																			"src": "19528:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 689,
																		"src": "19528:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "19528:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19528:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 716,
															"nodeType": "ExpressionStatement",
															"src": "19528:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 717,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 697,
																			"src": "19686:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 693,
																		"src": "19686:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 721,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 719,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "19699:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "19686:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 722,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 697,
																			"src": "19708:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 689,
																		"src": "19708:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "19708:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19686:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 726,
															"nodeType": "ExpressionStatement",
															"src": "19686:40:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19747:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 703,
															"id": 728,
															"nodeType": "Return",
															"src": "19740:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "19243:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "19421:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 696,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 694,
													"src": "19421:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "19438:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 698,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19420:32:0"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 735,
												"src": "19470:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19470:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19469:6:0"
									},
									"scope": 1078,
									"src": "19407:404:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "20051:1440:0",
										"statements": [
											{
												"assignments": [
													746
												],
												"declarations": [
													{
														"constant": false,
														"id": 746,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 814,
														"src": "20161:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 745,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20161:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 751,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 747,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "20182:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 693,
														"src": "20182:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 750,
													"indexExpression": {
														"argumentTypes": null,
														"id": 749,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "20195:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20182:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20161:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 752,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "20216:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20230:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20216:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "21448:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21469:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 744,
															"id": 811,
															"nodeType": "Return",
															"src": "21462:12:0"
														}
													]
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "20212:1273:0",
												"trueBody": {
													"id": 809,
													"nodeType": "Block",
													"src": "20233:1209:0",
													"statements": [
														{
															"assignments": [
																756
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 756,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 809,
																	"src": "20573:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 755,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20573:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 760,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 757,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "20597:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20610:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20597:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20573:38:0"
														},
														{
															"assignments": [
																762
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 762,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 809,
																	"src": "20625:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 761,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20625:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 768,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 763,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "20645:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 689,
																		"src": "20645:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "20645:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20666:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20645:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20625:42:0"
														},
														{
															"assignments": [
																770
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 770,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 809,
																	"src": "20907:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "20907:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 775,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 771,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "20927:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 689,
																	"src": "20927:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 774,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 773,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "20939:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20927:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20907:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 776,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "21041:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 689,
																		"src": "21041:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 780,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 778,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "21053:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21041:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 781,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "21070:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "21041:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 783,
															"nodeType": "ExpressionStatement",
															"src": "21041:38:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 784,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "21145:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 787,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 693,
																		"src": "21145:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 788,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 786,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "21158:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21145:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 789,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "21171:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21187:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "21171:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21145:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 793,
															"nodeType": "ExpressionStatement",
															"src": "21145:43:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 794,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "21294:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 689,
																		"src": "21294:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "21294:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21294:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 800,
															"nodeType": "ExpressionStatement",
															"src": "21294:17:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "21379:26:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 801,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "21386:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 693,
																		"src": "21386:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 804,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 803,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "21399:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "21386:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 806,
															"nodeType": "ExpressionStatement",
															"src": "21379:26:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21427:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 744,
															"id": 808,
															"nodeType": "Return",
															"src": "21420:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "19817:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 815,
												"src": "19996:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 737,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 694,
													"src": "19996:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 815,
												"src": "20013:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 739,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19995:32:0"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 815,
												"src": "20045:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20044:6:0"
									},
									"scope": 1078,
									"src": "19979:1512:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "21651:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 825,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "21668:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 693,
															"src": "21668:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 828,
														"indexExpression": {
															"argumentTypes": null,
															"id": 827,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "21681:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21668:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21691:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21668:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 824,
												"id": 831,
												"nodeType": "Return",
												"src": "21661:31:0"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "21497:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 833,
												"src": "21591:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 817,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 694,
													"src": "21591:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 833,
												"src": "21608:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 819,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21590:32:0"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 833,
												"src": "21645:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21645:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21644:6:0"
									},
									"scope": 1078,
									"src": "21572:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "21845:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 841,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "21862:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "21862:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "21862:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 840,
												"id": 844,
												"nodeType": "Return",
												"src": "21855:25:0"
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "21705:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 846,
												"src": "21797:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 835,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 694,
													"src": "21797:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21796:17:0"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 846,
												"src": "21836:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21835:9:0"
									},
									"scope": 1078,
									"src": "21780:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "22297:125:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 857,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 849,
																		"src": "22315:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 858,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 689,
																	"src": "22315:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "22315:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 860,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "22336:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22315:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22343:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "22307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22307:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "22307:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 865,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "22397:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "22397:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 868,
													"indexExpression": {
														"argumentTypes": null,
														"id": 867,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "22409:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "22397:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 855,
												"id": 869,
												"nodeType": "Return",
												"src": "22390:25:0"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "21893:323:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "22234:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 848,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 694,
													"src": "22234:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "22251:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22233:32:0"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "22288:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 853,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "22288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22287:9:0"
									},
									"scope": 1078,
									"src": "22221:201:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 874,
									"members": [
										{
											"constant": false,
											"id": 873,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 874,
											"src": "22475:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 872,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 694,
												"src": "22475:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 1078,
									"src": "22447:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "22738:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 885,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "22760:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 873,
															"src": "22760:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 891,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 879,
																			"src": "22788:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22780:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 889,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "22780:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22780:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22772:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 887,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "22772:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22772:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 884,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "22755:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$694_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22755:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 883,
												"id": 895,
												"nodeType": "Return",
												"src": "22748:48:0"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "22498:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 897,
												"src": "22675:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 876,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 874,
													"src": "22675:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 897,
												"src": "22699:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22674:39:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 897,
												"src": "22732:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22732:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22731:6:0"
									},
									"scope": 1078,
									"src": "22662:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "23050:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 908,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "23075:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 873,
															"src": "23075:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 914,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 902,
																			"src": "23103:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23095:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 912,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "23095:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23095:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23087:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 910,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "23087:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23087:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 907,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "23067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$694_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23067:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 906,
												"id": 918,
												"nodeType": "Return",
												"src": "23060:51:0"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "22809:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 920,
												"src": "22987:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 899,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 874,
													"src": "22987:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 920,
												"src": "23011:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22986:39:0"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 920,
												"src": "23044:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 904,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23044:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23043:6:0"
									},
									"scope": 1078,
									"src": "22971:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "23285:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 931,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "23312:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 873,
															"src": "23312:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 937,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "23340:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23332:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 935,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "23332:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23332:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23324:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 933,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "23324:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23324:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 930,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "23302:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$694_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23302:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 929,
												"id": 941,
												"nodeType": "Return",
												"src": "23295:53:0"
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "23124:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 943,
												"src": "23217:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 922,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 874,
													"src": "23217:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 943,
												"src": "23241:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23216:39:0"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 943,
												"src": "23279:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23279:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23278:6:0"
									},
									"scope": 1078,
									"src": "23199:156:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "23508:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 952,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "23533:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 873,
															"src": "23533:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 951,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "23525:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$694_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23525:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 950,
												"id": 955,
												"nodeType": "Return",
												"src": "23518:26:0"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "23361:70:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "23452:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 945,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 874,
													"src": "23452:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23451:24:0"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "23499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23498:9:0"
									},
									"scope": 1078,
									"src": "23436:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "23968:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 972,
																				"name": "set",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "24005:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
																					"typeString": "struct EnumerableSet.AddressSet storage pointer"
																				}
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "_inner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 873,
																			"src": "24005:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$694_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 974,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 962,
																			"src": "24017:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Set_$694_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 971,
																		"name": "_at",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "24001:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$694_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																		}
																	},
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24001:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23993:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 969,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23993:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23993:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "23985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 967,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "23985:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23985:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 966,
												"id": 978,
												"nodeType": "Return",
												"src": "23978:47:0"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "23557:323:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 980,
												"src": "23897:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 959,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 874,
													"src": "23897:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$874_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 980,
												"src": "23921:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23896:39:0"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 980,
												"src": "23959:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23958:9:0"
									},
									"scope": 1078,
									"src": "23885:147:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 983,
									"members": [
										{
											"constant": false,
											"id": 982,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 983,
											"src": "24080:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 981,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 694,
												"src": "24080:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$694_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 1078,
									"src": "24055:42:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "24340:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 994,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "24362:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 982,
															"src": "24362:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 998,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "24382:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24374:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 996,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "24374:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24374:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 993,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "24357:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$694_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24357:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 992,
												"id": 1001,
												"nodeType": "Return",
												"src": "24350:39:0"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "24103:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "24280:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 985,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 983,
													"src": "24280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "24301:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24279:36:0"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "24334:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 990,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24333:6:0"
									},
									"scope": 1078,
									"src": "24267:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "24640:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1014,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "24665:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 982,
															"src": "24665:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1018,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "24685:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24677:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1016,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "24677:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24677:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1013,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "24657:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$694_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24657:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1021,
												"nodeType": "Return",
												"src": "24650:42:0"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "24402:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1023,
												"src": "24580:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1005,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 983,
													"src": "24580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1023,
												"src": "24601:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24579:36:0"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1023,
												"src": "24634:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1010,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24634:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24633:6:0"
									},
									"scope": 1078,
									"src": "24564:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "24863:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1034,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "24890:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 982,
															"src": "24890:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "24910:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24902:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "24902:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24902:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1033,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "24880:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$694_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24880:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1041,
												"nodeType": "Return",
												"src": "24873:44:0"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "24705:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1043,
												"src": "24798:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1025,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 983,
													"src": "24798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1043,
												"src": "24819:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24797:36:0"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1043,
												"src": "24857:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1030,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24857:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24856:6:0"
									},
									"scope": 1078,
									"src": "24780:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "25074:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1052,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "25099:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 982,
															"src": "25099:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$694_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1051,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "25091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$694_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25091:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1050,
												"id": 1055,
												"nodeType": "Return",
												"src": "25084:26:0"
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "24930:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "25021:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1045,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 983,
													"src": "25021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25020:21:0"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "25065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25064:9:0"
									},
									"scope": 1078,
									"src": "25005:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "25531:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1070,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "25560:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 982,
																	"src": "25560:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$694_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1072,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "25572:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$694_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1069,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "25556:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$694_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25556:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25548:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25548:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25548:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1075,
												"nodeType": "Return",
												"src": "25541:38:0"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "25123:323:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "25463:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1059,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 983,
													"src": "25463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$983_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "25484:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25462:36:0"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1077,
												"src": "25522:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25521:9:0"
									},
									"scope": 1078,
									"src": "25451:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1719,
							"src": "18520:7068:0"
						},
						{
							"id": 1079,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25642:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1100,
							"linearizedBaseContracts": [
								1100
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "26269:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1084,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "26286:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "26286:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1086,
												"nodeType": "Return",
												"src": "26279:17:0"
											}
										]
									},
									"documentation": null,
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26218:2:0"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1088,
												"src": "26252:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26252:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26251:17:0"
									},
									"scope": 1100,
									"src": "26199:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "26374:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1093,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "26384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1100",
														"typeString": "contract Context"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "26384:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1095,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "26524:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "26524:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1097,
												"nodeType": "Return",
												"src": "26517:15:0"
											}
										]
									},
									"documentation": null,
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26326:2:0"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1099,
												"src": "26360:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26360:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26359:14:0"
									},
									"scope": 1100,
									"src": "26309:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1719,
							"src": "26167:374:0"
						},
						{
							"id": 1101,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "26598:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1103,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1100,
										"src": "27138:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1100",
											"typeString": "contract Context"
										}
									},
									"id": 1104,
									"nodeType": "InheritanceSpecifier",
									"src": "27138:7:0"
								}
							],
							"contractDependencies": [
								1100
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1102,
								"nodeType": "StructuredDocumentation",
								"src": "26623:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1207,
							"linearizedBaseContracts": [
								1207,
								1100
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1106,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1207,
									"src": "27152:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27152:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1112,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1112,
												"src": "27208:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27208:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1112,
												"src": "27239:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27207:57:0"
									},
									"src": "27181:84:0"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "27391:135:0",
										"statements": [
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1133,
														"src": "27401:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27401:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1118,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "27421:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27421:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27401:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1121,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "27443:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1122,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "27452:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27443:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "27443:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27505:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27497:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1126,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27497:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27497:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1130,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "27509:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1125,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "27476:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27476:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "EmitStatement",
												"src": "27471:48:0"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "27271:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1134,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27379:2:0"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27391:0:0"
									},
									"scope": 1207,
									"src": "27367:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "27649:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1140,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1106,
													"src": "27666:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1139,
												"id": 1141,
												"nodeType": "Return",
												"src": "27659:13:0"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "27532:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27616:2:0"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1143,
												"src": "27640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27639:9:0"
									},
									"scope": 1207,
									"src": "27602:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "27788:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1147,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "27806:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1148,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "27816:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27816:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "27806:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27830:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "27798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27798:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "27798:67:0"
											},
											{
												"id": 1154,
												"nodeType": "PlaceholderStatement",
												"src": "27875:1:0"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "27685:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1156,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27785:2:0"
									},
									"src": "27767:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "28279:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1163,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "28315:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28331:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28323:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1164,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28323:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28323:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1162,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "28294:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28294:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "EmitStatement",
												"src": "28289:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1170,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "28344:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28361:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28353:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1171,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28353:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28353:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28344:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "28344:19:0"
											}
										]
									},
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "27889:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1160,
											"modifierName": {
												"argumentTypes": null,
												"id": 1159,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1156,
												"src": "28269:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28269:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28251:2:0"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28279:0:0"
									},
									"scope": 1207,
									"src": "28225:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "28589:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1187,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "28607:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28627:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28619:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1188,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28619:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28619:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "28607:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28631:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "28599:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28599:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "28599:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1197,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "28708:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1198,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "28716:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1196,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "28687:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28687:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "EmitStatement",
												"src": "28682:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1201,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "28735:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1202,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "28744:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28735:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "28735:17:0"
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "28376:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1184,
											"modifierName": {
												"argumentTypes": null,
												"id": 1183,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1156,
												"src": "28579:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "28579:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1206,
												"src": "28546:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28545:18:0"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28589:0:0"
									},
									"scope": 1207,
									"src": "28519:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1719,
							"src": "27118:1643:0"
						},
						{
							"id": 1208,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "28821:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1210,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1100,
										"src": "30031:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1100",
											"typeString": "contract Context"
										}
									},
									"id": 1211,
									"nodeType": "InheritanceSpecifier",
									"src": "30031:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1212,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "30040:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"id": 1213,
									"nodeType": "InheritanceSpecifier",
									"src": "30040:6:0"
								}
							],
							"contractDependencies": [
								77,
								1100
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1209,
								"nodeType": "StructuredDocumentation",
								"src": "28850:1162:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1709,
							"linearizedBaseContracts": [
								1709,
								77,
								1100
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1216,
									"libraryName": {
										"contractScope": null,
										"id": 1214,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 272,
										"src": "30059:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$272",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "30053:27:0",
									"typeName": {
										"id": 1215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30072:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1219,
									"libraryName": {
										"contractScope": null,
										"id": 1217,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 475,
										"src": "30091:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$475",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "30085:26:0",
									"typeName": {
										"id": 1218,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "30103:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 1223,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1709,
									"src": "30117:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1222,
										"keyType": {
											"id": 1220,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30126:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30117:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1221,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30137:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1229,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1709,
									"src": "30170:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1228,
										"keyType": {
											"id": 1224,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30179:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30170:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1227,
											"keyType": {
												"id": 1225,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "30199:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "30190:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1226,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30210:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1231,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1709,
									"src": "30246:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30246:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1233,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1709,
									"src": "30281:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1232,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "30281:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1235,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1709,
									"src": "30307:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1234,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "30307:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1237,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1709,
									"src": "30335:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1236,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "30335:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "30743:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1245,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "30753:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1246,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "30761:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "30753:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "30753:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1249,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "30775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1250,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "30785:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "30775:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "30775:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1253,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "30801:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30813:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "30801:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "30801:14:0"
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "30365:311:0",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1258,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1258,
												"src": "30694:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1239,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30694:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1258,
												"src": "30714:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30714:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30693:42:0"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30743:0:0"
									},
									"scope": 1709,
									"src": "30681:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "30939:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1264,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1233,
													"src": "30956:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1265,
												"nodeType": "Return",
												"src": "30949:12:0"
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "30828:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30900:2:0"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1267,
												"src": "30924:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1261,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "30924:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30923:15:0"
									},
									"scope": 1709,
									"src": "30887:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "31135:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1273,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1235,
													"src": "31152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1272,
												"id": 1274,
												"nodeType": "Return",
												"src": "31145:14:0"
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "30974:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31096:2:0"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1276,
												"src": "31120:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31120:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31119:15:0"
									},
									"scope": 1709,
									"src": "31081:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "31837:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1282,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1237,
													"src": "31854:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1281,
												"id": 1283,
												"nodeType": "Return",
												"src": "31847:16:0"
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "31172:612:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31806:2:0"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1285,
												"src": "31830:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1279,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "31830:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31829:7:0"
									},
									"scope": 1709,
									"src": "31789:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "31992:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1292,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1231,
													"src": "32009:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1293,
												"nodeType": "Return",
												"src": "32002:19:0"
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "31876:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31965:8:0"
									},
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31950:2:0"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1295,
												"src": "31983:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31982:9:0"
									},
									"scope": 1709,
									"src": "31930:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "32161:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1304,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "32178:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1306,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1305,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "32188:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32178:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1303,
												"id": 1307,
												"nodeType": "Return",
												"src": "32171:25:0"
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "32034:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1300,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32134:8:0"
									},
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1309,
												"src": "32105:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32104:17:0"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1309,
												"src": "32152:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32151:9:0"
									},
									"scope": 1709,
									"src": "32086:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "32498:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1321,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "32518:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32518:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1323,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "32532:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1324,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "32543:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1320,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "32508:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32508:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "32508:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32567:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1319,
												"id": 1328,
												"nodeType": "Return",
												"src": "32560:11:0"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "32209:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1316,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32474:8:0"
									},
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "32424:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "32443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32423:35:0"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1330,
												"src": "32492:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32492:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32491:6:0"
									},
									"scope": 1709,
									"src": "32406:172:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										36
									],
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "32734:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1341,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "32751:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1343,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "32763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32751:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1345,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1344,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "32770:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32751:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1346,
												"nodeType": "Return",
												"src": "32744:34:0"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "32584:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1337,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32707:8:0"
									},
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1348,
												"src": "32655:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1348,
												"src": "32670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32654:32:0"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1348,
												"src": "32725:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32724:9:0"
									},
									"scope": 1709,
									"src": "32636:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										46
									],
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "33012:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1360,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "33031:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33031:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "33045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1363,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "33054:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1359,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "33022:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33022:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "33022:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33078:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1358,
												"id": 1367,
												"nodeType": "Return",
												"src": "33071:11:0"
											}
										]
									},
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "32791:127:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1355,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32988:8:0"
									},
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1369,
												"src": "32940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1369,
												"src": "32957:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32939:33:0"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1369,
												"src": "33006:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33006:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33005:6:0"
									},
									"scope": 1709,
									"src": "32923:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "33661:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1383,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "33681:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1384,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "33689:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1385,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "33700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1382,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "33671:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33671:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "33671:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1389,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "33726:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1390,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "33734:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33734:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1399,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "33786:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33794:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1392,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1229,
																			"src": "33748:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1394,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1393,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "33760:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "33748:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1397,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1395,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "33768:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33768:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33748:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 150,
																"src": "33748:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33748:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1388,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "33717:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33717:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "33717:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33855:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1381,
												"id": 1405,
												"nodeType": "Return",
												"src": "33848:11:0"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "33095:449:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1378,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33637:8:0"
									},
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1407,
												"src": "33571:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1407,
												"src": "33587:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1407,
												"src": "33606:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33570:51:0"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1407,
												"src": "33655:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33654:6:0"
									},
									"scope": 1709,
									"src": "33549:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "34355:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1418,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "34374:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34374:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1420,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "34388:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1428,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "34436:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1421,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1229,
																			"src": "34397:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1424,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1422,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1088,
																				"src": "34409:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34409:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34397:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1426,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1425,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1410,
																		"src": "34423:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "34397:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 105,
																"src": "34397:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34397:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1417,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "34365:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34365:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "34365:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "34465:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1416,
												"id": 1433,
												"nodeType": "Return",
												"src": "34458:11:0"
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "33872:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1435,
												"src": "34288:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1435,
												"src": "34305:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34287:37:0"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1435,
												"src": "34349:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34349:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34348:6:0"
									},
									"scope": 1709,
									"src": "34261:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "35062:167:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1446,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "35081:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35081:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1448,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "35095:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1456,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "35143:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35160:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1449,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1229,
																			"src": "35104:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1452,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1450,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1088,
																				"src": "35116:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35116:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "35104:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1454,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1453,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "35130:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "35104:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 150,
																"src": "35104:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35104:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1445,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "35072:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35072:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "35072:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35218:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1444,
												"id": 1462,
												"nodeType": "Return",
												"src": "35211:11:0"
											}
										]
									},
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "34482:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "34990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "35007:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34989:42:0"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1464,
												"src": "35056:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35055:6:0"
									},
									"scope": 1709,
									"src": "34963:266:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "35790:443:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1475,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "35808:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35826:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35818:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1476,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35818:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35818:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "35808:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35830:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "35800:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35800:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "35800:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1485,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "35888:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35909:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35901:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35901:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35901:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "35888:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35913:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "35880:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35880:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "35880:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1495,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "35983:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1496,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "35991:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1497,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "36002:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1494,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "35962:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35962:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "35962:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1500,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "36020:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1502,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1501,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "36030:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36020:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1507,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "36062:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36070:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1503,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "36040:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1505,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1504,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "36050:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36040:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "36040:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36040:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36020:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "36020:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1512,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "36121:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1514,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1513,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "36131:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36121:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1519,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "36169:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1515,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "36144:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1517,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1516,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "36154:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36144:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 105,
															"src": "36144:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36144:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36121:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "36121:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1524,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "36200:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1525,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "36208:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1526,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "36219:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1523,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "36191:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36191:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1528,
												"nodeType": "EmitStatement",
												"src": "36186:40:0"
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "35235:463:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1530,
												"src": "35722:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1530,
												"src": "35738:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1530,
												"src": "35757:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35721:51:0"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35790:0:0"
									},
									"scope": 1709,
									"src": "35703:530:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "36568:305:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1539,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "36586:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36605:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36597:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1540,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "36597:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36597:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "36586:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36609:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "36578:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36578:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "36578:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36683:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36675:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1549,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36675:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36675:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1553,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "36687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1554,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "36696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1548,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "36654:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36654:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "36654:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1557,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "36714:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1560,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "36746:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1558,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "36729:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 105,
															"src": "36729:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36729:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36714:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "36714:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1564,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "36763:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1566,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1565,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "36773:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "36763:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1571,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "36807:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1567,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "36784:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1569,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1568,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "36794:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36784:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 105,
															"src": "36784:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36784:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36763:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1574,
												"nodeType": "ExpressionStatement",
												"src": "36763:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36846:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36838:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36838:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36838:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1580,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "36850:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1581,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "36859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1575,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "36829:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36829:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "EmitStatement",
												"src": "36824:42:0"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "36239:259:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1585,
												"src": "36518:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1585,
												"src": "36535:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36517:33:0"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36568:0:0"
									},
									"scope": 1709,
									"src": "36503:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1640,
										"nodeType": "Block",
										"src": "37257:345:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1594,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "37275:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37294:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37286:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1595,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "37286:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37286:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "37275:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37298:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "37267:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37267:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "37267:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1604,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "37366:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37383:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37375:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1605,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37375:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37375:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1609,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "37387:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1603,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "37345:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37345:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "37345:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1612,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "37405:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1614,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1613,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "37415:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37405:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1619,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "37449:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37457:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1615,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "37426:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1617,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1616,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "37436:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "37426:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "37426:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37426:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37405:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "37405:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1624,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "37504:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1627,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "37536:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1625,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "37519:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 122,
															"src": "37519:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37519:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37504:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "37504:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1632,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "37567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37584:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37576:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1633,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37576:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37576:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1637,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "37588:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1631,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "37558:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37558:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1639,
												"nodeType": "EmitStatement",
												"src": "37553:42:0"
											}
										]
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "36879:308:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1641,
												"src": "37207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1641,
												"src": "37224:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "37206:33:0"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37257:0:0"
									},
									"scope": 1709,
									"src": "37192:410:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "38110:257:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1652,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "38128:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38145:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38137:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1653,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "38137:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38137:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "38128:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38149:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "38120:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38120:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "38120:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1662,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "38206:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38225:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38217:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1663,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "38217:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38217:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "38206:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38229:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "38198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38198:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "38198:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1671,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "38277:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1674,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1672,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "38289:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "38277:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1675,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1673,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "38296:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38277:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1676,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "38307:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38277:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "38277:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1680,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "38337:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1681,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "38344:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1682,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "38353:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1679,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "38328:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38328:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1684,
												"nodeType": "EmitStatement",
												"src": "38323:37:0"
											}
										]
									},
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "37608:414:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1686,
												"src": "38045:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1686,
												"src": "38060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1686,
												"src": "38077:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38044:48:0"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38110:0:0"
									},
									"scope": 1709,
									"src": "38027:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "38740:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1692,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "38750:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1693,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "38762:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "38750:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "38750:21:0"
											}
										]
									},
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "38373:312:0",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1697,
												"src": "38714:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1688,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "38714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38713:17:0"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38740:0:0"
									},
									"scope": 1709,
									"src": "38690:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "39454:3:0",
										"statements": []
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "38784:576:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1708,
												"src": "39395:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39395:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1708,
												"src": "39409:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1708,
												"src": "39421:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39394:42:0"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39454:0:0"
									},
									"scope": 1709,
									"src": "39365:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1719,
							"src": "30013:9446:0"
						},
						{
							"id": 1710,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "39498:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1718,
							"linearizedBaseContracts": [
								1718
							],
							"name": "IMigratorChef",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ce5494bb",
									"id": 1717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1717,
												"src": "40086:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1711,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "40086:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40085:14:0"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1717,
												"src": "40118:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1714,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "40118:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40117:8:0"
									},
									"scope": 1718,
									"src": "40069:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1719,
							"src": "39530:598:0"
						}
					],
					"src": "126:40004:0"
				},
				"id": 0
			}
		}
	}
}